{"ast":null,"code":"import React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport theme from \"../theme.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar style = StyleSheet.create({\n  relicFrame: {\n    position: 'absolute'\n  },\n  image: {\n    width: 80,\n    height: 80,\n    borderRadius: 50,\n    borderWidth: 2\n  },\n  darkSide: {\n    borderColor: theme.colors.darkSide\n  },\n  lightSide: {\n    borderColor: theme.colors.lightSide\n  },\n  neutralSide: {\n    borderColor: theme.colors.neutralSide\n  }\n});\nexport default function StylesImage(_ref) {\n  var alignment = _ref.alignment,\n    image = _ref.image;\n  var relicFrameAll = {\n    uri: 'https://assets.swgoh.gg/files/assets/character-frame-relic-atlas.b98ef776d9bfe53b.png'\n  };\n  var darkRelicFrame = require(\"../../assets/character-frame-relic-dark-side.png\");\n  var neutralRelicFrame = require(\"../../assets/character-frame-relic-neutral-side.png\");\n  var lightRelicFrame = require(\"../../assets/character-frame-relic-light-side.png\");\n  var imageStyles = [style.image, alignment === 2 ? style.lightSide : alignment === 3 ? style.darkSide : style.neutralSide];\n  var relicFrame;\n  if (alignment === 2) {\n    relicFrame = lightRelicFrame;\n  } else if (alignment === 3) {\n    relicFrame = darkRelicFrame;\n  } else {\n    relicFrame = neutralRelicFrame;\n  }\n  return _jsxs(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Image, {\n      style: imageStyles,\n      source: {\n        uri: image\n      }\n    }), _jsx(Image, {\n      style: style.relicFrame,\n      source: relicFrame\n    })]\n  });\n}","map":{"version":3,"names":["React","Image","StyleSheet","View","theme","jsx","_jsx","jsxs","_jsxs","style","create","relicFrame","position","image","width","height","borderRadius","borderWidth","darkSide","borderColor","colors","lightSide","neutralSide","StylesImage","_ref","alignment","relicFrameAll","uri","darkRelicFrame","require","neutralRelicFrame","lightRelicFrame","imageStyles","alignItems","justifyContent","children","source"],"sources":["D:/Dev/swgoh/swgoh_mobile/src/components/ImageStyles.jsx"],"sourcesContent":["import React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\nimport theme from '../theme.js';\n\nconst style = StyleSheet.create({\n  relicFrame: {\n    position: 'absolute',\n  },\n  image: {\n    width: 80,\n    height: 80,\n    borderRadius: 50,\n    borderWidth: 2,\n  },\n  darkSide: {\n    borderColor: theme.colors.darkSide,\n  },\n  lightSide: {\n    borderColor: theme.colors.lightSide,\n  },\n  neutralSide: {\n    borderColor: theme.colors.neutralSide,\n  },\n});\n\nexport default function StylesImage({ alignment, image }) {\n  const relicFrameAll = {\n    uri: 'https://assets.swgoh.gg/files/assets/character-frame-relic-atlas.b98ef776d9bfe53b.png',\n  };\n  const darkRelicFrame = require('../../assets/character-frame-relic-dark-side.png');\n  const neutralRelicFrame = require('../../assets/character-frame-relic-neutral-side.png');\n  const lightRelicFrame = require('../../assets/character-frame-relic-light-side.png');\n\n  const imageStyles = [\n    style.image,\n    alignment === 2\n      ? style.lightSide\n      : alignment === 3\n      ? style.darkSide\n      : style.neutralSide,\n  ];\n\n  let relicFrame;\n\n  if (alignment === 2) {\n    relicFrame = lightRelicFrame;\n  } else if (alignment === 3) {\n    relicFrame = darkRelicFrame;\n  } else {\n    relicFrame = neutralRelicFrame;\n  }\n\n  return (\n    <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n      <Image style={imageStyles} source={{ uri: image }} />\n      <Image style={style.relicFrame} source={relicFrame} />\n    </View>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,KAAK;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhC,IAAMC,KAAK,GAAGP,UAAU,CAACQ,MAAM,CAAC;EAC9BC,UAAU,EAAE;IACVC,QAAQ,EAAE;EACZ,CAAC;EACDC,KAAK,EAAE;IACLC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAEf,KAAK,CAACgB,MAAM,CAACF;EAC5B,CAAC;EACDG,SAAS,EAAE;IACTF,WAAW,EAAEf,KAAK,CAACgB,MAAM,CAACC;EAC5B,CAAC;EACDC,WAAW,EAAE;IACXH,WAAW,EAAEf,KAAK,CAACgB,MAAM,CAACE;EAC5B;AACF,CAAC,CAAC;AAEF,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAuB;EAAA,IAApBC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEZ,KAAK,GAAAW,IAAA,CAALX,KAAK;EACpD,IAAMa,aAAa,GAAG;IACpBC,GAAG,EAAE;EACP,CAAC;EACD,IAAMC,cAAc,GAAGC,OAAO,mDAAmD,CAAC;EAClF,IAAMC,iBAAiB,GAAGD,OAAO,sDAAsD,CAAC;EACxF,IAAME,eAAe,GAAGF,OAAO,oDAAoD,CAAC;EAEpF,IAAMG,WAAW,GAAG,CAClBvB,KAAK,CAACI,KAAK,EACXY,SAAS,KAAK,CAAC,GACXhB,KAAK,CAACY,SAAS,GACfI,SAAS,KAAK,CAAC,GACfhB,KAAK,CAACS,QAAQ,GACdT,KAAK,CAACa,WAAW,CACtB;EAED,IAAIX,UAAU;EAEd,IAAIc,SAAS,KAAK,CAAC,EAAE;IACnBd,UAAU,GAAGoB,eAAe;EAC9B,CAAC,MAAM,IAAIN,SAAS,KAAK,CAAC,EAAE;IAC1Bd,UAAU,GAAGiB,cAAc;EAC7B,CAAC,MAAM;IACLjB,UAAU,GAAGmB,iBAAiB;EAChC;EAEA,OACEtB,KAAA,CAACL,IAAI;IAACM,KAAK,EAAE;MAAEwB,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GAC9D7B,IAAA,CAACL,KAAK;MAACQ,KAAK,EAAEuB,WAAY;MAACI,MAAM,EAAE;QAAET,GAAG,EAAEd;MAAM;IAAE,CAAE,CAAC,EACrDP,IAAA,CAACL,KAAK;MAACQ,KAAK,EAAEA,KAAK,CAACE,UAAW;MAACyB,MAAM,EAAEzB;IAAW,CAAE,CAAC;EAAA,CAClD,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}